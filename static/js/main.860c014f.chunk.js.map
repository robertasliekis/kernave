{"version":3,"sources":["actions/index.js","components/InteractiveMap.js","components/GreyOverlay.js","App.js","reportWebVitals.js","serviceWorker.js","reducers/setLanguage.js","reducers/allReducers.js","index.js"],"names":["setLanguage","selection","type","payload","legendIconNames","activeIcons","mapText","mapTitle","legendTitle","buttonClose","virtualTourWarning","buttonConfirm","InteractiveMap","props","mouseEnterActiveIcon","index","setState","iconHovered","iconHoveredIndex","mouseLeaveActiveIcon","mouseClickActiveIcon","console","log","initialState","state","virtualTourWarningOpen","iconClickedIndex","mouseClickEnterVR","virtualTourOpen","languageBtnClicked","language","activeIconsRefs","audioAboutRef","React","createRef","prevProps","prevState","this","classList","remove","i","add","className","onClick","style","border","languageIndex","map","legendIconName","backgroundImage","activeIcon","ref","onMouseEnter","onMouseLeave","display","src","title","frameBorder","Component","mapDispatchToProps","connect","GreyOverlay","languageSelected","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","action","combineReducers","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.860c014f.chunk.js","sourcesContent":["export const setLanguage = (selection) => {\r\n  return {\r\n    type: \"SET_LANGUAGE\",\r\n    payload: selection\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setLanguage } from \"../actions\";\r\n\r\nconst legendIconNames = [\r\n  [\"Aktyvus taškas\", \"Active point\"],\r\n  [\"Kernavės archeologinės vietovės muziejus\", \"Archeological museum\"],\r\n  [\"Senosios bažnyčios vieta\", \"Old church\"],\r\n  [\"XIII - XIV a. amatininkų kiemai\", \"XIII - XIV century house\"],\r\n  [\"Senojo Kernavės miesto vieta\", \"Old city place\"],\r\n  [\"Kernavės dvarvietė\", \"Another place\"],\r\n  [\"XIII - XIV a. kapinynas\", \"XIII - XIV century cemetary\"],\r\n  [\"Romėniškojo laikotarpio gyvenvietės ir pilkapynas\", \"Old stuff\"],\r\n  [\"Neolito gyvenvietės\", \"More places\"],\r\n  [\"Akmens amžiaus stovyklavietės\", \"Stoneage place\"]\r\n];\r\n\r\nconst activeIcons = [\r\n  [\"Baltasis kalnas\", \"Location 1\", 8],\r\n  [\"Kernavės amatininkų kiemų rekonstrukcijos\", \"Location 2\", 30],\r\n  [\"Senosios bažnyčios vieta\", \"Location 3\", 60],\r\n  [\"Viduramžių įtvirtinto Kernavės miesto liekanos\", \"Location 4\", 100],\r\n  [\"Medgrinda\", \"Location 5\", 150],\r\n  [\"Kernavės nekropolis\", \"Location 6\", 10],\r\n  [\"Kernavės kapinynas\", \"Location 7\", 250],\r\n  [\"Semeniškių kapinynas ir gyvenvietė\", \"Location 8\", 300]\r\n];\r\n\r\nconst mapText = {\r\n  mapTitle: [\"Vilniaus Valstybinio Kernavės kultūrinio rezervato žemėlapis\", \"Map of Vilnius State Kernavė Cultural Reserve\"],\r\n  legendTitle: [\"Legenda\", \"Legend\"],\r\n  buttonClose: [\"Uždaryti\", \"Close\"],\r\n  virtualTourWarning: [\"Jūs įeinate į 360 virtualų turą\", \"You are entering 360 virtual tour\"],\r\n  buttonConfirm: [\"Gerai\", \"Okey\"]\r\n};\r\n\r\nexport class InteractiveMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      iconHovered: false,\r\n      iconHoveredIndex: 0,\r\n      iconClickedIndex: 0,\r\n      virtualTourWarningOpen: false,\r\n      virtualTourOpen: false\r\n    };\r\n    this.activeIconsRefs = {};\r\n    this.audioAboutRef = React.createRef();\r\n  }\r\n\r\n  mouseEnterActiveIcon = (index) => {\r\n    this.setState({ iconHovered: true, iconHoveredIndex: index });\r\n  };\r\n\r\n  mouseLeaveActiveIcon = () => {\r\n    this.setState({ iconHovered: false });\r\n  };\r\n\r\n  mouseClickActiveIcon = (index) => {\r\n    console.log(index);\r\n    const initialState = this.state.virtualTourWarningOpen;\r\n    this.setState({ virtualTourWarningOpen: !initialState, iconClickedIndex: index });\r\n  };\r\n\r\n  mouseClickEnterVR = () => {\r\n    const initialState = this.state.virtualTourOpen;\r\n    this.setState({ virtualTourOpen: !initialState });\r\n  };\r\n\r\n  languageBtnClicked = (language) => {\r\n    this.props.setLanguage(language);\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.iconHovered !== prevState.iconHovered || this.state.iconHoveredIndex !== prevState.iconHoveredIndex) {\r\n      this.activeIconsRefs[this.state.iconHoveredIndex].classList.remove(\"active-icon-stop\");\r\n      this.activeIconsRefs[prevState.iconHoveredIndex].classList.remove(\"active-icon-stop\");\r\n      for (let i = 0; i < 8; i++) {\r\n        this.activeIconsRefs[i].classList.remove(\"icons-stop\");\r\n      }\r\n      if (this.state.iconHovered) {\r\n        this.activeIconsRefs[this.state.iconHoveredIndex].classList.add(\"active-icon-stop\");\r\n        for (let i = 0; i < 8; i++) {\r\n          this.activeIconsRefs[i].classList.add(\"icons-stop\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"interactive-map-container\">\r\n        <div className=\"languages-container\">\r\n          <div\r\n            className=\"btn btn-language-lt\"\r\n            onClick={() => this.languageBtnClicked(\"lithuanian\")}\r\n            style={{ border: this.props.language === \"lithuanian\" ? \"3px solid black\" : \"none\" }}\r\n          >\r\n            LT\r\n          </div>\r\n          <div\r\n            className=\"btn btn-language-en\"\r\n            onClick={() => this.languageBtnClicked(\"english\")}\r\n            style={{ border: this.props.language === \"english\" ? \"3px solid black\" : \"none\" }}\r\n          >\r\n            EN\r\n          </div>\r\n        </div>\r\n        <h1 className=\"map-title\">{mapText.mapTitle[this.props.languageIndex]}</h1>\r\n        <div className=\"map-images-container\">\r\n          <div className=\"river-image image\"></div>\r\n          <div className=\"map-image image\"></div>\r\n        </div>\r\n        <div className=\"legend-container\">\r\n          <div className=\"legend-title\">{mapText.legendTitle[this.props.languageIndex]}</div>\r\n          <div className=\"icons-container\">\r\n            {legendIconNames.map((legendIconName, index) => {\r\n              return (\r\n                <div className=\"legend-item\" key={index}>\r\n                  <div className=\"icon-container\">\r\n                    <div\r\n                      className=\"icon\"\r\n                      style={{\r\n                        backgroundImage: `url(\"./images/Asset ${index + 2}.png\")`\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"name\">{legendIconName[this.props.languageIndex]}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"active-icons-container\">\r\n          {activeIcons.map((activeIcon, index) => {\r\n            return (\r\n              <div\r\n                className=\"active-icon\"\r\n                key={index}\r\n                ref={(ref) => {\r\n                  this.activeIconsRefs[index] = ref;\r\n                }}\r\n                onMouseEnter={() => this.mouseEnterActiveIcon(index)}\r\n                onMouseLeave={() => this.mouseLeaveActiveIcon()}\r\n                onClick={() => this.mouseClickActiveIcon(index)}\r\n              >\r\n                <div className=\"icon-scale\">\r\n                  <div\r\n                    className=\"icon-rotation\"\r\n                    style={\r\n                      {\r\n                        //  transform: `rotate(${activeIcon[2]}deg)`\r\n                      }\r\n                    }\r\n                  >\r\n                    <div\r\n                      className=\"icon\"\r\n                      style={{\r\n                        backgroundImage: `url(\"./images/icon-spinning.png\")`\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"icon-title\">{activeIcon[this.props.languageIndex]}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"warning-screen-container\" style={{ display: this.state.virtualTourWarningOpen ? \"flex\" : \"none\" }}>\r\n          <div className=\"warning-screen-content\">\r\n            <div className=\"btn btn-close\" onClick={() => this.mouseClickActiveIcon()}>\r\n              {mapText.buttonClose[this.props.languageIndex]}\r\n            </div>\r\n            <div className=\"warning-text\">{mapText.virtualTourWarning[this.props.languageIndex]}</div>\r\n            <div\r\n              className=\"btn btn-confirm\"\r\n              onClick={() => {\r\n                this.mouseClickEnterVR();\r\n                this.mouseClickActiveIcon();\r\n              }}\r\n            >\r\n              {mapText.buttonConfirm[this.props.languageIndex]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-window-container\" style={{ display: this.state.virtualTourOpen ? \"flex\" : \"none\" }}>\r\n          <div className=\"modal-window-content\">\r\n            <div className=\"btn btn-close\" onClick={() => this.mouseClickEnterVR()}>\r\n              {mapText.buttonClose[this.props.languageIndex]}\r\n            </div>\r\n            <div className=\"virtual-reality-frame-container\">\r\n              <iframe\r\n                src={this.state.virtualTourOpen ? \"https://www.3dvista.com/samples/real_estate_virtual_tour.html\" : \"\"}\r\n                title=\"virtual tour\"\r\n                frameBorder=\"0\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.setLanguage.language,\r\n    languageIndex: state.setLanguage.languageIndex\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InteractiveMap);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setLanguage } from \"../actions\";\r\n\r\nexport class GreyOverlay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      languageSelected: false\r\n    };\r\n  }\r\n  languageBtnClicked = (language) => {\r\n    this.props.setLanguage(language);\r\n    this.setState({ languageSelected: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"grey-overlay\" style={{ display: this.state.languageSelected ? \"none\" : \"flex\" }}>\r\n        <div className=\"language-selection-container\">\r\n          <div className=\"text\">Pasirinkite kalbą:</div>\r\n          <div className=\"btn-container\">\r\n            <div className=\"btn btn-language-lt\" onClick={() => this.languageBtnClicked(\"lithuanian\")}>\r\n              LT\r\n            </div>\r\n            <div className=\"btn btn-language-en\" onClick={() => this.languageBtnClicked(\"english\")}>\r\n              EN\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.setLanguage.language\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GreyOverlay);\r\n","import React from \"react\";\n\nimport InteractiveMap from \"./components/InteractiveMap\";\nimport GreyOverlay from \"./components/GreyOverlay\";\n\n// \"homepage\": \"http://https://robertasliekis.github.io/kernave/\",\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"overflow-wrapper\">\n        <GreyOverlay />\n        <div className=\"website-wrapper\">\n          <InteractiveMap />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\");\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  language: \"lithuanian\",\r\n  languageIndex: 0\r\n};\r\n\r\nconst setLanguage = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LANGUAGE\":\r\n      let languageIndex;\r\n      if (action.payload === \"lithuanian\") {\r\n        languageIndex = 0;\r\n      } else {\r\n        languageIndex = 1;\r\n      }\r\n      return { ...state, language: action.payload, languageIndex: languageIndex };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setLanguage;\r\n","import { combineReducers } from \"redux\";\r\nimport setLanguage from \"./setLanguage\";\r\n\r\nexport default combineReducers({\r\n  setLanguage: setLanguage\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/allReducers\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n//serviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}